<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Copyright (c) 2004 on behalf of the EU EGEE Project: 
	The European Organization for Nuclear Research (CERN), 
	Istituto Nazionale di Fisica Nucleare (INFN), Italy
	Datamat Spa, Italy
	Centre National de la Recherche Scientifique (CNRS), France
	CS Systeme d'Information (CSSI), France
	Royal Institute of Technology, Center for Parallel Computers (KTH-PDC), Sweden
	Universiteit van Amsterdam (UvA), Netherlands
	University of Helsinki (UH.HIP), Finland
	University of Bergen (UiB), Norway
	Council for the Central Laboratory of the Research Councils (CCLRC), United Kingdom

	Build file for the GLite slcs server component
	
	Authors: Joachim Flammer <Joachim.Flammer@Cern.ch>	
	Version info: $Id: build.xml,v 1.1 2006/09/14 12:55:36 vtschopp Exp $
	Release: $Name:  $

	Revision history:
	$Log: build.xml,v $
	Revision 1.1  2006/09/14 12:55:36  vtschopp
	Initial revision

	Revision 1.7  2006/04/26 11:39:55  flammer
	Corrected wrong template syntax.

	Revision 1.6  2005/04/17 10:29:35  dimeglio
	Split module.build from version.properties

	Revision 1.5  2004/07/20 16:08:30  flammer
	Changed incorrect my_... instead of .._template entries for subsystem and component.
	
	Revision 1.4  2004/07/16 16:32:53  flammer
	Added comment where to add language target.
	
	Revision 1.3  2004/07/16 14:56:55  flammer
	Corrected input path of build.properties.
	
	Revision 1.2  2004/07/06 20:43:19  flammer
	Update of configure & targets.
	
	Revision 1.1.1.1  2004/06/18 12:40:17  flammer
	Added general component template.
	
	
-->

<project name="server" default="dist">

	<!-- ==============================================
	      Builds the GLite slcs server component
	     ============================================== -->
	
	<!-- =========================================
	      Import properties (order is important)
	     ========================================= -->
	
	<!-- Import baseline properties & user properties -->
	<import file="../org.glite/project/baseline.properties.xml" />

	<!-- import component build properties,
		        component properties &
		        component common properties -->
	<import file="./project/properties.xml"/>
	
	<!-- import subsystem build properties,
		        subsystem properties &
		        subsystem common properties -->
	<import file="${subsystem.properties.file}"/>

	<!-- import global build properties &
		        global properties -->
	<import file="${global.properties.file}" />
		
	<!-- =========================================
 	      Load dependency property files (order is important)
	     ========================================= -->
	<property file="${user.dependencies.file}"/>
	<property file="${component.dependencies.file}" />
	<property file="${subsystem.dependencies.file}" />
	<property file="${global.dependencies.file}"/>

	<!-- =========================================
                 Load configuration definitions (order is important)
             ========================================= -->
        <import file="${global.configure.options.file}"/>
        <import file="${component.configure.options.file}"/>
	
	<!-- =========================================
      	      Import task definitions (order is important)
	     ========================================= -->
	<import file="${subsystem.taskdefs.file}" />
	<import file="${global.taskdefs.file}" />
	
	<!-- =========================================
		 Load common targets
	     ========================================= -->
	<!-- Put your language target (java/c++-ant/c++-autotool/perl) here -->
	<import file="${global.targets-java.file}" />
		
	<!-- =========================================
		 Load version file 
	     ========================================= -->
	<property file="${module.version.file}"/>
	<property file="${module.build.file}"/>
	
	<!-- ==============================================
		 Local private targets
	     ============================================== -->
	
	<target name="localinit"
		description="Module specific initialization tasks">
        <!-- Set compile classpaths -->
        <path id="compile.classpath">
            <!-- stage classpath -->
            <path refid="stage.classpath"/>
            <!-- module classpath -->
            <path refid="module.classpath"/>
            <!-- org.glite.slcs.common dependencies -->
            <!-- HOW TO ADD CLASSPATH FROM OTHER COMPONENT ???? -->

            <!-- external dependencies -->
            <!-- log4j classpath -->
            <path refid="ext.log4j.classpath"/>
            <!-- tomcat classpath -->
            <path refid="ext.tomcat.classpath"/>
            <!-- commons-logging classpath -->
            <path refid="ext.commons-logging.classpath"/>
            <!-- bcprov-jdk14 classpath -->
            <path refid="ext.bcprov-jdk14.classpath"/>
            <!-- bcmail-jdk14 classpath
            <path refid="ext.bcmail-jdk14.classpath"/> -->
            <!-- commons-configuration classpath 
            <path refid="ext.commons-configuration.classpath"/> -->
            <!-- commons-collections classpath 
            <path refid="ext.commons-collections.classpath"/> -->
            <!-- commons-lang classpath 
            <path refid="ext.commons-lang.classpath"/> -->
            <!-- commons-httpclient classpath 
            <path refid="ext.commons-httpclient.classpath"/> -->
            <!-- commons-codec classpath 
            <path refid="ext.commons-codec.classpath"/> -->
        </path>
        <!-- Set test classpaths -->
        <path id="test.classpath">
            <!-- compile classpath -->
            <path refid="compile.classpath"/>
            <!-- module test classpath -->
            <path refid="module.test.classpath"/>
            <!-- external dependencies -->
            <!-- junit classpath -->
            <path refid="ext.junit.classpath"/>
        </path>

	</target>
	
	<target name="localcompile"
		description="Module specific compile tasks">
	</target>

	<target name="localclean"
		description="Module specific cleaning tasks">
	</target>
	
</project>		

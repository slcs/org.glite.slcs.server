<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) Members of the EGEE Collaboration. 2007.
    See http://www.eu-egee.org/partners/ for details on the copyright
    holders.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    ETICS externals dependencies definition

    Author: Valery Tschopp <tschopp@switch.ch>
    Version: $Id: etics-externals.xml,v 1.10 2008/04/22 15:17:59 vtschopp Exp $
-->
<project name="etics-externals">

    <!-- ========================================================
         MACRODEF
         ======================================================== -->

    <!-- define the properties <external>.bundle and <external>.dir for externals
         required <external>.name, <external>.version and <external>.platform
         properties to be defined -->
    <macrodef name="define-ext-dir">
        <attribute name="external" />
        <sequential>
            <!-- fail on missing properties -->
            <fail unless="@{external}.name" message="ERROR: define-ext-dir: property @{external}.name doesn't exist" />
            <fail unless="@{external}.version" message="ERROR: define-ext-dir: property @{external}.version doesn't exist" />
            <fail unless="@{external}.platform" message="ERROR: define-ext-dir: property @{external}.platform doesn't exist" />
            <!-- create new properties -->
            <property name="_@{external}.bundle.value" value="${@{external}.name}/${@{external}.version}/${@{external}.platform}" />
            <property name="@{external}.bundle" value="${_@{external}.bundle.value}" />
            <property name="_@{external}.dir.value" value="${externals.dir}/${@{external}.bundle}" />
            <property name="@{external}.dir" location="${_@{external}.dir.value}" />
            <!-- <echo message="XXX: define-ext-dir: @{external}.dir=${_@{external}.dir.value}" /> -->
        </sequential>
    </macrodef>

    <!-- define fileset <external>.fileset and path <external>.path -->
    <macrodef name="define-ext-path">
        <attribute name="external" />
        <attribute name="dir" default="${@{external}.dir}" />
        <element name="includes-excludes" implicit="true" />
        <sequential>
            <!-- create fileset and then path -->
            <fileset id="@{external}.fileset" dir="@{dir}">
                <includes-excludes />
            </fileset>
            <path id="@{external}.path">
                <fileset refid="@{external}.fileset" />
            </path>
        </sequential>
    </macrodef>

    <!-- download and expand externals in the local repository -->
    <macrodef name="download-ext">
        <attribute name="external" />
        <sequential>
            <!-- fail on missing properties -->
            <fail unless="@{external}.bundle" message="ERROR: download-ext: property @{external}.bundle not defined, call define-ext-dir first." />
            <fail unless="@{external}.distfile" message="ERROR: download-ext: property @{external}.distfile doesn't exist." />
            <!-- create some properties -->
            <property name="_@{external}.url.value" value="${externals.url}/${@{external}.bundle}/${@{external}.distfile}" />
            <property name="_@{external}.dest.dir.value" location="${externals.dir}/${@{external}.bundle}" />
            <property name="_@{external}.dest.value" location="${_@{external}.dest.dir.value}/${@{external}.distfile}" />
            <!-- create repository location, download and expand -->
            <mkdir dir="${_@{external}.dest.dir.value}" />
            <get src="${_@{external}.url.value}" dest="${_@{external}.dest.value}" usetimestamp="true" />
            <untar compression="gzip" src="${_@{external}.dest.value}" dest="${_@{external}.dest.dir.value}" overwrite="false" />
            <property name="@{external}.downloaded" value="true" />
        </sequential>
    </macrodef>

    <!-- ========================================================
         BOOTSTRAP
         ======================================================== -->

    <!-- determine current script directory -->
    <dirname property="etics-externals.basedir" file="${ant.file.etics-externals}" />

    <!-- get all externals ext.NAME.version, ext.NAME.name and ext.NAME.platform definitions -->
    <echo message="load properties: ${etics-externals.basedir}/etics-externals.properties" />
    <property file="${etics-externals.basedir}/etics-externals.properties" />

    <!-- remote externals repository url -->
    <property name="externals.url" value="${repository.url}/externals" />

    <!-- local externals repository location -->
    <property name="repository.dir" location="${etics-externals.basedir}/../../repository" />
    <property name="externals.dir" location="${repository.dir}/externals" />
    <mkdir dir="${externals.dir}" />

    <!-- ========================================================
         EXTERNALS DEFINITIONS
         ======================================================== -->

    <!-- apache-struts -->
    <define-ext-dir external="ext.apache-struts" />
    <define-ext-path external="ext.apache-struts">
        <!-- SUN taglib -->
        <include name="**/jstl-*.jar" />
        <include name="**/standard-*.jar" />
        <!-- jakarta commons -->
        <include name="**/commons-beanutils-*.jar" />
        <include name="**/commons-chain-*.jar" />
        <include name="**/commons-digester-*.jar" />
        <!-- Struts -->
        <include name="**/struts-core-*.jar" />
        <include name="**/struts-taglib-*.jar" />
        <include name="**/struts-tiles-*.jar" />
    </define-ext-path>

    <!-- axis -->
    <define-ext-dir external="ext.axis" />
    <define-ext-path external="ext.axis">
        <include name="**/axis.jar" />
        <include name="**/commons-discovery-*.jar" />
        <include name="**/jaxrpc.jar" />
        <include name="**/saaj.jar" />
    </define-ext-path>

    <!-- bouncycastle jdk 1.5 (default) -->
    <define-ext-dir external="ext.bouncycastle" />
    <define-ext-path external="ext.bouncycastle.bcprov" dir="${ext.bouncycastle.dir}">
        <include name="**/bcprov-*.jar" />
    </define-ext-path>
    <define-ext-path external="ext.bouncycastle.bcmail" dir="${ext.bouncycastle.dir}">
        <include name="**/bcmail-*.jar" />
    </define-ext-path>
    <define-ext-path external="ext.bouncycastle">
        <include name="**/bcprov-*.jar" />
        <include name="**/bcmail-*.jar" />
    </define-ext-path>

    <!-- commons-cli -->
    <define-ext-dir external="ext.jakarta-commons-cli" />
    <define-ext-path external="ext.jakarta-commons-cli">
        <include name="**/${ext.jakarta-commons-cli.name}-${ext.jakarta-commons-cli.version}.jar" />
    </define-ext-path>

    <!-- commons-codec -->
    <define-ext-dir external="ext.jakarta-commons-codec" />
    <define-ext-path external="ext.jakarta-commons-codec">
        <include name="**/${ext.jakarta-commons-codec.name}-${ext.jakarta-commons-codec.version}.jar" />
    </define-ext-path>

    <!-- commons-collections -->
    <define-ext-dir external="ext.jakarta-commons-collections" />
    <define-ext-path external="ext.jakarta-commons-collections">
        <include name="**/${ext.jakarta-commons-collections.name}-${ext.jakarta-commons-collections.version}.jar" />
    </define-ext-path>

    <!-- commons-configuration -->
    <define-ext-dir external="ext.jakarta-commons-configuration" />
    <define-ext-path external="ext.jakarta-commons-configuration">
        <include name="**/${ext.jakarta-commons-configuration.name}-${ext.jakarta-commons-configuration.version}.jar" />
    </define-ext-path>

    <!-- commons-httpclient -->
    <define-ext-dir external="ext.jakarta-commons-httpclient" />
    <define-ext-path external="ext.jakarta-commons-httpclient">
        <include name="**/${ext.jakarta-commons-httpclient.name}-${ext.jakarta-commons-httpclient.version}.jar" />
    </define-ext-path>

    <!-- commons-lang -->
    <define-ext-dir external="ext.jakarta-commons-lang" />
    <define-ext-path external="ext.jakarta-commons-lang">
        <include name="**/${ext.jakarta-commons-lang.name}-${ext.jakarta-commons-lang.version}.jar" />
    </define-ext-path>

    <!-- commons-logging -->
    <define-ext-dir external="ext.jakarta-commons-logging" />
    <define-ext-path external="ext.jakarta-commons-logging">
        <include name="**/${ext.jakarta-commons-logging.name}-${ext.jakarta-commons-logging.version}.jar" />
    </define-ext-path>

    <!-- junit -->
    <define-ext-dir external="ext.junit" />
    <define-ext-path external="ext.junit">
        <include name="junit.jar" />
    </define-ext-path>

    <!-- log4j -->
    <define-ext-dir external="ext.log4j" />
    <define-ext-path external="ext.log4j">
        <include name="**/log4j-*.jar" />
    </define-ext-path>

    <!-- mysql-jdbc -->
    <define-ext-dir external="ext.mysql-jdbc" />
    <define-ext-path external="ext.mysql-jdbc">
        <include name="mysql-connector-java-*-bin.jar" />
    </define-ext-path>

    <!-- tomcat -->
    <define-ext-dir external="ext.tomcat" />
    <define-ext-path external="ext.tomcat">
        <include name="**/servlet-api.jar" />
    </define-ext-path>

    <!-- novosec-bc-ext -->
    <define-ext-dir external="ext.novosec-bc-ext" />
    <define-ext-path external="ext.novosec-bc-ext">
        <include name="**/*.jar" />
    </define-ext-path>

</project>

